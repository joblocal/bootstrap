.card {
  border: 0;
  box-shadow: $card-shadow;
  // clear bottom border as each block only has top border
  > .list-group {
    .list-group-item:last-child {
      border-bottom: 0;
    }
  }
  // CUSTOM: Buttons
  .card-btn {
    padding: $card-spacer-y $card-spacer-x;
    border-top: $card-border-width solid $card-border-color;
    border-radius: 0;
  }

  > .card-btn:first-child {
    @include border-top-radius($card-border-radius);
  }

  > .card-btn:last-child {
    @include border-bottom-radius($card-border-radius);
  }

  .alert {
    margin: 0;
    border-right: 0;
    border-left: 0;
    border-radius: 0;
  }

  .alert-bottom {
    border-bottom: 0;
    @include border-bottom-radius($card-border-radius-inner);
  }

  .alert-top {
    border-top: 0;
    @include border-top-radius($card-border-radius-inner);
  }
}

.card-body {
  border-top: $card-border-width solid $card-border-color;

  // clear top border if block is first child in the card
  &:first-child {
    border-top: 0;
  }
}

.card-body-slim {
  padding: 0 $card-spacer-x 0 $card-spacer-x;
}

.card-header {
  background-color: transparent;
  border-bottom: 0;
}

//
// Card groups
//

@include media-breakpoint-up(sm) {
  .card-group {
    box-shadow: $card-shadow;

    .card {
      box-shadow: none;
    }
  }
}


//
// CUSTOM: Card Image General
//

.card-img {
  border-top: $card-border-width solid $card-border-color;
  border-radius: 0; // overwrite vanilla bootstrap as we want to handle this differently with wrapper
}

.card-img:first-child {
  border-top: 0;
}

// .card-img-top,
.card-img:first-child img {
  @include border-top-radius($card-border-radius-inner);
}

// .card-img-bottom,
.card-img:last-child img {
  @include border-bottom-radius($card-border-radius-inner);
}

//
// CUSTOM: Card has-arrow
//
// I kept it general, so we can use it at other places. We might need to adjust when this creates problems

.has-arrow {
  position: relative;
  padding-right: $card-arrow-size + $card-spacer-x;

  &::after {
    position: absolute;
    top: 50%;
    right: $card-spacer-x * .5;
    width: $card-arrow-size;
    height: $card-arrow-size;
    margin-top: $card-arrow-size * -.5;
    content: "";
    background-image: $card-arrow;
    background-repeat: no-repeat;
    background-size: $card-arrow-size;
  }
}

//
// CUSTOM: Card block action
//
// Generally removing link formatting on linked card-body, introducing hover & active for dedicated blocks, for example publications

a.card-body { /* stylelint-disable-line selector-no-qualifying-type */
  color: inherit;

  @include hover-focus {
    text-decoration: none;
  }
}

.card-body-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  text-align: inherit; // For `<button>`s (anchors inherit)

  // Hover state
  @include hover-focus {
    color: $card-action-hover-color;
    background-color: $card-action-hover-bg;
  }

  &:active {
    color: $card-action-active-color;
    background-color: $card-action-active-bg;
    box-shadow: $card-action-active-box-shadow;
  }
}

//
// CUSTOM: Card-nav
//
// Special Component, that adds the correct padding and top border without using the `card-header` class.

.card-nav {
  padding: $card-nav-spacer-y $card-nav-spacer-x;
  border-top: $card-border-width solid $card-border-color;

  &:first-child {
    border-top: 0;
  }
}

//
// Card deck rework
//

.card-grid {
  display: flex;
  flex-flow: row wrap;

  .card {
    display: flex;
    flex-basis: 17.5rem;
    flex-direction: column;
  }

  @include media-breakpoint-down(md) {
    .card {
      flex: 1 0 17.5rem;
    }
  }
}

@each $breakpoint in map-keys($grid-gutter-widths) {
  @include media-breakpoint-up($breakpoint) {
    $gutter: map-get($grid-gutter-widths, $breakpoint);

    .card-grid {
      margin: $gutter * -.5;

      .card {
        margin: $gutter * .5;
      }
    }
  }
}

//
// Action Cards
//

.card-action {
  position: relative;
  top: 0;

  color: inherit;
  text-decoration: none;

  transition: border .2s, box-shadow .2s, top .2s ease-in-out;

  &::before {
    position: absolute;
    width: 100%;
    height: 100%;
    content: "";
    background-color: transparent;
    border-radius: $card-border-radius;
  }

  &:hover {
    top: -.25rem;
    color: inherit;
    text-decoration: none;
    box-shadow: $box-shadow-large;

    &::before {
      border: 2px solid theme-color("primary");
    }
  }

  &:active {
    top: .05rem;
    box-shadow: inset $box-shadow-large;
    transition: top .1s;
  }
}
